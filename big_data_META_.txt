Time: 2017-07-13 20:24:24
Filename: big_data
File-Path: data/big_data.txt
Column Indexed: ['0']
Key-Value Separator:$#|#$
Within Key Separator:#$|$#
Value separator:,
Each field inside value: (WHITE_SPACE)
Output: 11 compressed txt files
--------------------------Description--------------------------

Index of data/big_data.txt [column(s): 0 ] has been successfully created on 2017-07-13 20:24:24. Output is 11 files.
Data in stored in the form of key and values. Key denotes tuple of keywords from indexed column and value is a compressed list of list containing [row number, offset value, length of data segment]. To avoid mixing up of special charcters during compression using zlib '$#|#$' is used as a separater between key and values. '#$|$#' between multiple keywords inside each key, if any and value(s) are separated by 'commas'
Algorithm comprises of two level indexing using hashed approch. At first level every keyword is processed (converted in lower case and spaces and special charcters are eliminated), then, summation of ascii of each keyword is performed, followed by its modulos by 11. That generates index parameter ranging from 0 to 10. Example: Keyword 'XYZ' is convered to 'xyz' and its summation value is 363 and its index paramater is 363mod11 i.e. 0, it denotes that this keyword will be present in index file 0
Second level indexing uses binary odd, even inserting into respective index file. odd/even decision parameter is generated by following approch. Example: 'xyz' ascii(x)*1+ascii(y)*2+ascii(z)*3 then modulo of this value is performed by 2, resulting either 0 or 1. if output is zero then keyword is placed in even row and if one then odd row
